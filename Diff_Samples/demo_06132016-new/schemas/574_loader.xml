<?xml version="1.0" encoding="UTF-8"?><loader description="" name="EBS_GL" refreshPeriod="1800" schema="EBS_GL" version="1" xml:base="schemas/312_loader.xml"><datasets><sql fetchsize="300" incremental="false" source="Vision" table="EBS_GL.GL_PERIODS"><query>SELECT 
ADJUSTMENT_PERIOD_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
CONTEXT,
CREATED_BY,
CREATION_DATE,
DESCRIPTION,
END_DATE,
ENTERED_PERIOD_NAME,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
PERIOD_NAME,
PERIOD_NUM,
PERIOD_SET_NAME,
PERIOD_TYPE,
PERIOD_YEAR,
QUARTER_NUM,
QUARTER_START_DATE,
START_DATE,
YEAR_START_DATE
FROM GL_PERIODS</query></sql><sql fetchsize="300" incremental="false" source="Vision" table="EBS_GL.GL_PERIOD_SETS"><query>select PERIOD_SET_NAME, 
LAST_UPDATE_DATE,
GPS.LAST_UPDATED_BY,
GPS.CREATION_DATE,
CREATED_BY,
DESCRIPTION,
PERIOD_SET_ID,
GPS.SECURITY_FLAG
from GL_PERIOD_SETS GPS</query></sql><sql fetchsize="300" incremental="false" source="Vision" table="EBS_GL.GL_PERIOD_STATUSES"><query>select 
LEDGER_ID,
MIGRATION_STATUS_CODE,
TRACK_BC_YTD_FLAG,
APPLICATION_ID,
SET_OF_BOOKS_ID,
PERIOD_NAME,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CLOSING_STATUS,
START_DATE,
END_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
PERIOD_NUM,
QUARTER_NUM,
ADJUSTMENT_PERIOD_FLAG,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
CONTEXT,
YEAR_START_DATE,
QUARTER_START_DATE,
EFFECTIVE_PERIOD_NUM,
ELIMINATION_CONFIRMED_FLAG,
CHRONOLOGICAL_SEQ_STATUS_CODE,
APPLICATION_ID,
SET_OF_BOOKS_ID,
PERIOD_NAME,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
CLOSING_STATUS,
START_DATE,
END_DATE,
PERIOD_TYPE,
PERIOD_YEAR,
PERIOD_NUM,
QUARTER_NUM,
ADJUSTMENT_PERIOD_FLAG,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_LOGIN,
CONTEXT,
YEAR_START_DATE,
QUARTER_START_DATE,
EFFECTIVE_PERIOD_NUM,
ELIMINATION_CONFIRMED_FLAG
FROM GL_PERIOD_STATUSES</query></sql><sql fetchsize="300" incremental="false" source="Vision" table="EBS_GL.GL_PERIOD_TYPES"><query>select 
PERIOD_TYPE,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
NUMBER_PER_FISCAL_YEAR,
YEAR_TYPE_IN_NAME,
USER_PERIOD_TYPE,
CREATION_DATE,
CREATED_BY,
DESCRIPTION,
PERIOD_TYPE_ID
from GL_PERIOD_TYPES</query></sql><sql fetchsize="300" incremental="false" source="Vision" table="EBS_GL.GL_SETS_OF_BOOKS"><query>select
SET_OF_BOOKS_ID,
NAME, 
SHORT_NAME,
CHART_OF_ACCOUNTS_ID ,
CURRENCY_CODE,
PERIOD_SET_NAME,
ACCOUNTED_PERIOD_TYPE,
LAST_UPDATE_DATE,
LATEST_OPENED_PERIOD_NAME, 
DESCRIPTION,
SLA_LEDGER_CASH_BASIS_FLAG
from GL_SETS_OF_BOOKS</query></sql><sql incremental="true" source="Vision" table="EBS_GL.GL_ACCOUNT_SEG"><query>select fifs.id_flex_num,fifs.application_column_name, fifs.segment_name
, ffv.flex_value ACCOUNT_SEG_VALUE, ffv.description, gcc.code_combination_id
from fnd_id_flex_segments fifs
,fnd_flex_values_vl ffv
, fnd_segment_attribute_values fsav
, gl_code_combinations gcc
where fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'GL_ACCOUNT'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = ffv.flex_value_set_id
and decode(fifs.application_column_name,'SEGMENT1',gcc.segment1
           , 'SEGMENT2', gcc.segment2, 'SEGMENT3', gcc.segment3
           , 'SEGMENT4', gcc.segment4, 'SEGMENT5',gcc.segment5) = ffv.flex_value
and gcc.chart_of_accounts_id = fifs.id_flex_num</query><queryUpdate>select fifs.id_flex_num,fifs.application_column_name, fifs.segment_name
, ffv.flex_value ACCOUNT_SEG_VALUE, ffv.description, gcc.code_combination_id
from fnd_id_flex_segments fifs
, fnd_flex_values_vl ffv
, fnd_segment_attribute_values fsav
, gl_code_combinations gcc
where fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'GL_ACCOUNT'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = ffv.flex_value_set_id
and decode(fifs.application_column_name,'SEGMENT1',gcc.segment1
           , 'SEGMENT2', gcc.segment2, 'SEGMENT3', gcc.segment3
           , 'SEGMENT4', gcc.segment4, 'SEGMENT5',gcc.segment5) = ffv.flex_value
and gcc.chart_of_accounts_id = fifs.id_flex_num
and ( fifs.last_update_date &gt; ? OR ffv.last_update_date &gt; ? OR fsav.last_update_date &gt; ?
    or gcc.last_update_date &gt; ? )</queryUpdate></sql><sql incremental="true" source="Vision" table="EBS_GL.GL_Account_Hierarchy"><query>SELECT fifs.id_flex_num Chart_of_Accounts
,  	NH.PARENT_FLEX_VALUE "Parent"
,		FVT.DESCRIPTION
,		NH.CHILD_FLEX_VALUE_LOW "From"
,		NH.CHILD_FLEX_VALUE_HIGH "To"
, NH.RANGE_ATTRIBUTE "ParentFlag"
FROM 
  FND_FLEX_VALUE_NORM_HIERARCHY NH 
, FND_FLEX_VALUES_TL FVT, FND_FLEX_VALUES FV
, fnd_id_flex_segments fifs
, fnd_segment_attribute_values fsav
WHERE 
fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'GL_ACCOUNT'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = fv.flex_value_set_id
AND Fv.FLEX_VALUE_SET_ID = NH.FLEX_VALUE_SET_ID
AND FV.FLEX_VALUE_ID = FVT.FLEX_VALUE_ID
AND NH.PARENT_FLEX_VALUE(+) = FVT.FLEX_VALUE_MEANING
AND FV.SUMMARY_FLAG = 'Y'
ORDER BY 1,3</query><queryUpdate>SELECT fifs.id_flex_num Chart_of_Accounts
,  	NH.PARENT_FLEX_VALUE "Parent"
,		FVT.DESCRIPTION
,		NH.CHILD_FLEX_VALUE_LOW "From"
,		NH.CHILD_FLEX_VALUE_HIGH "To"
, NH.RANGE_ATTRIBUTE "ParentFlag"
FROM 
  FND_FLEX_VALUE_NORM_HIERARCHY NH 
, FND_FLEX_VALUES_TL FVT, FND_FLEX_VALUES FV
, fnd_id_flex_segments fifs
, fnd_segment_attribute_values fsav
WHERE 
fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'GL_ACCOUNT'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = fv.flex_value_set_id
AND Fv.FLEX_VALUE_SET_ID = NH.FLEX_VALUE_SET_ID
AND FV.FLEX_VALUE_ID = FVT.FLEX_VALUE_ID
AND NH.PARENT_FLEX_VALUE(+) = FVT.FLEX_VALUE_MEANING
AND FV.SUMMARY_FLAG = 'Y'
and (nh.last_update_date &gt; ? or fvt.last_update_date &gt; ? or
     fv.last_update_date &gt; ? or fifs.last_update_date &gt; ? or
     fsav.last_update_date &gt; ?)
ORDER BY 1,3</queryUpdate></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_BALANCES"><query>Select  *
from GL_BALANCES</query></sql><sql incremental="true" source="Vision" table="EBS_GL.GL_BALANCING_SEG"><query>select fifs.id_flex_num,fifs.application_column_name, fifs.segment_name, ffv.flex_value BALANCING_SEG_VALUE
, ffv.description, gcc.code_combination_id
from fnd_id_flex_segments fifs
,fnd_flex_values_vl ffv
, fnd_segment_attribute_values fsav
, gl_code_combinations gcc
where fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'GL_BALANCING'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = ffv.flex_value_set_id
and decode(fifs.application_column_name,'SEGMENT1',gcc.segment1
           , 'SEGMENT2', gcc.segment2, 'SEGMENT3', gcc.segment3
           , 'SEGMENT4', gcc.segment4, 'SEGMENT5',gcc.segment5) = ffv.flex_value
and gcc.chart_of_accounts_id = fifs.id_flex_num</query><queryUpdate>select fifs.id_flex_num,fifs.application_column_name, fifs.segment_name, ffv.flex_value BALANCING_SEG_VALUE
, ffv.description, gcc.code_combination_id
from fnd_id_flex_segments fifs
,fnd_flex_values_vl ffv
, fnd_segment_attribute_values fsav
, gl_code_combinations gcc
where fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'GL_BALANCING'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = ffv.flex_value_set_id
and decode(fifs.application_column_name,'SEGMENT1',gcc.segment1
           , 'SEGMENT2', gcc.segment2, 'SEGMENT3', gcc.segment3
           , 'SEGMENT4', gcc.segment4, 'SEGMENT5',gcc.segment5) = ffv.flex_value
and gcc.chart_of_accounts_id = fifs.id_flex_num
and ( fifs.last_update_date &gt; ? OR ffv.last_update_date &gt; ? OR fsav.last_update_date &gt; ?
    or gcc.last_update_date &gt; ? )</queryUpdate></sql><sql incremental="true" source="Vision" table="EBS_GL.GL_COST_CENTER_SEG"><query>select fifs.id_flex_num,fifs.application_column_name, fifs.segment_name, ffv.flex_value COST_CENTER_SEG_VALUE
, ffv.description , gcc.code_combination_id
from fnd_id_flex_segments fifs
,fnd_flex_values_vl ffv
, fnd_segment_attribute_values fsav
, gl_code_combinations gcc
where fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'FA_COST_CTR'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = ffv.flex_value_set_id
and decode(fifs.application_column_name,'SEGMENT1',gcc.segment1
           , 'SEGMENT2', gcc.segment2, 'SEGMENT3', gcc.segment3
           , 'SEGMENT4', gcc.segment4, 'SEGMENT5',gcc.segment5) = ffv.flex_value
and gcc.chart_of_accounts_id = fifs.id_flex_num</query><queryUpdate>select fifs.id_flex_num,fifs.application_column_name, fifs.segment_name, ffv.flex_value COST_CENTER_SEG_VALUE
, ffv.description , gcc.code_combination_id
from fnd_id_flex_segments fifs
,fnd_flex_values_vl ffv
, fnd_segment_attribute_values fsav
, gl_code_combinations gcc
where fifs.id_flex_code = 'GL#'
and fifs.id_flex_num = fsav.id_flex_num
and fifs.id_flex_code = fsav.id_flex_code
and fsav.segment_attribute_type= 'FA_COST_CTR'
and fsav.attribute_value = 'Y'
and fifs.APPLICATION_COLUMN_NAME=fsav.application_column_name
and fifs.flex_value_set_id = ffv.flex_value_set_id
and decode(fifs.application_column_name,'SEGMENT1',gcc.segment1
           , 'SEGMENT2', gcc.segment2, 'SEGMENT3', gcc.segment3
           , 'SEGMENT4', gcc.segment4, 'SEGMENT5',gcc.segment5) = ffv.flex_value
and gcc.chart_of_accounts_id = fifs.id_flex_num
and ( fifs.last_update_date &gt; ? OR ffv.last_update_date &gt; ? OR fsav.last_update_date &gt; ?
    or gcc.last_update_date &gt; ? )</queryUpdate></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_IMPORT_REFERENCES"><query>SELECT * FROM GL_IMPORT_REFERENCES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_JE_BATCHES"><query>SELECT * FROM GL_JE_BATCHES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_JE_CATEGORIES"><query>SELECT * FROM GL_JE_CATEGORIES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_JE_HEADERS"><query>SELECT * FROM GL_JE_HEADERS</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_JE_LINES"><query>SELECT * FROM GL_JE_LINES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_JE_SOURCES"><query>SELECT * FROM GL_JE_SOURCES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_LEDGERS"><query>select * from gl_ledgers</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_PERIODS_TEST"><query>SELECT 
ADJUSTMENT_PERIOD_FLAG,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
CONTEXT,
CREATED_BY,
CREATION_DATE,
DESCRIPTION,
END_DATE,
ENTERED_PERIOD_NAME,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
PERIOD_NAME,
PERIOD_NUM,
PERIOD_SET_NAME,
PERIOD_TYPE,
PERIOD_YEAR,
QUARTER_NUM,
QUARTER_START_DATE,
START_DATE,
YEAR_START_DATE
FROM GL_PERIODS</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_DAILY_CONVERSION_TYPES"><query>SELECT CONVERSION_TYPE, USER_CONVERSION_TYPE, LAST_UPDATE_DATE, LAST_UPDATED_BY, CREATION_DATE, CREATED_BY, LAST_UPDATE_LOGIN, DESCRIPTION, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13, ATTRIBUTE14, ATTRIBUTE15, CONTEXT, FEM_ENABLED_FLAG, FEM_SCENARIO, FEM_RATE_TYPE_CODE, FEM_TIMEFRAME, SECURITY_FLAG FROM GL.GL_DAILY_CONVERSION_TYPES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_DAILY_RATES"><query>SELECT FROM_CURRENCY, TO_CURRENCY, CONVERSION_DATE, CONVERSION_TYPE, CONVERSION_RATE, STATUS_CODE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, LAST_UPDATE_LOGIN, CONTEXT, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13, ATTRIBUTE14, ATTRIBUTE15, RATE_SOURCE_CODE FROM GL.GL_DAILY_RATES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.XXGL_CODE_COMBINATIONS"><query>select code_combination_id, max(je_source) from incorta_je_lines
group by code_combination_id</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_DATE_PERIOD_MAP"><query>SELECT "PERIOD_SET_NAME" PERIOD_SET_NAME, "ACCOUNTING_DATE" ACCOUNTING_DATE, "PERIOD_NAME" PERIOD_NAME, "PERIOD_TYPE" PERIOD_TYPE, "CREATION_DATE" CREATION_DATE, "CREATED_BY" CREATED_BY, "LAST_UPDATE_DATE" LAST_UPDATE_DATE, "LAST_UPDATED_BY" LAST_UPDATED_BY, "LAST_UPDATE_LOGIN" LAST_UPDATE_LOGIN FROM "GL"."GL_DATE_PERIOD_MAP"</query></sql><sql incremental="false" source="Vision" table="EBS_GL.Test"><query>select 
PERIOD_TYPE,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
NUMBER_PER_FISCAL_YEAR,
YEAR_TYPE_IN_NAME,
USER_PERIOD_TYPE,
CREATION_DATE,
CREATED_BY,
DESCRIPTION,
PERIOD_TYPE_ID
from GL_PERIOD_TYPES</query></sql><sql incremental="false" source="Vision" table="EBS_GL.GL_SEG_VAL_NORM_HIERARCHY"><query>select * from GL_SEG_VAL_NORM_HIERARCHY where flex_value_set_id = 1002472</query></sql><sql fetchsize="300" incremental="false" source="Vision" table="EBS_GL.GL_CODE_COMBINATION" type="sql"><query>select Code_Combination_ID, LAST_UPDATE_DATE, LAST_UPDATED_BY, CHART_OF_ACCOUNTS_ID, DETAIL_POSTING_ALLOWED_FLAG, DETAIL_BUDGETING_ALLOWED_FLAG, ACCOUNT_TYPE, ENABLED_FLAG, SUMMARY_FLAG, SEGMENT1, SEGMENT2, SEGMENT3, SEGMENT4, SEGMENT5, SEGMENT6, SEGMENT7, SEGMENT8, SEGMENT9, COMPANY_COST_CENTER_ORG_ID 
from GL_CODE_COMBINATIONS</query></sql></datasets></loader>